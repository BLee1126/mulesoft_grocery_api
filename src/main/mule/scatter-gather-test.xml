<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="helloFlow" doc:id="625d821d-0e98-4015-beee-2c5876694459">
		<http:listener doc:name="Listener" doc:id="aadae3f3-5e6c-4015-a435-b28afa8aa75d" path="/hello" config-ref="HTTP_Listener_config"/>
		<set-payload value="hello world" doc:name="Set Payloadd" doc:id="7e56a8d5-81a8-40fb-a9db-a2ab1f3e782e" />
	</flow>
	<flow name="ordersCSVFlow" doc:id="5630baea-c3f2-40f6-bd89-de1942dac0ae">
		<http:listener doc:name="Listener" doc:id="6687f4db-b743-4934-b786-94e82ddfdff6" config-ref="HTTP_Listener_config" path="/ordersTeam2"/>
		<file:read doc:name="readOrdersCSV" doc:id="d9fc7056-146b-468a-8080-a8b99e58886d" config-ref="File_Config" path="C:\Users\benor\OneDrive\Documents\Mulesoft_Cohort_p3\src\main\resources\csvs\csvs for p3\Orders.csv" />
		<ee:transform doc:name="Transform Message" doc:id="f579f233-a765-4d8b-9187-304109caa334">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="4e22176d-8be3-42b9-bf7f-0279a61a4510" message="#[payload]"/>
	</flow>
	<flow name="productsCSVFlow" doc:id="c31ef09c-35cb-4c01-b05a-ee4f6a3d2e27" >
		<http:listener doc:name="Listener" doc:id="8401fbfe-d8b1-4122-b226-04d71451e94a" path="/productsTeam2" config-ref="HTTP_Listener_config"/>
		<file:read doc:name="readProductsCSV" doc:id="b8c75dd9-5c37-4a2b-a703-e11c9bfbb88d" config-ref="File_Config" path="C:\Users\benor\OneDrive\Documents\Mulesoft_Cohort_p3\src\main\resources\csvs\csvs for p3\Products.csv" />
		<ee:transform doc:name="Transform Message" doc:id="5fb61567-25e8-4be3-abf1-301006ed157b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="69ed7360-a096-4c3c-a51e-a5ae6cdfec02" message="#[payload]"/>
	</flow>
	<flow name="transactionsCSVFlow" doc:id="bc31397d-f46f-4bca-ba27-3ad8e90ca0ad" >
		<http:listener doc:name="Listener" doc:id="6bb7754e-5909-477a-bec5-76c3abb1f851" config-ref="HTTP_Listener_config" path="/transactionsTeam2"/>
		<file:read doc:name="readTransactionsCSV" doc:id="688c792f-3299-45e2-b4ee-c2aad7dbc1cd" config-ref="File_Config" path="C:\Users\benor\OneDrive\Documents\Mulesoft_Cohort_p3\src\main\resources\csvs\csvs for p3\Transactions.csv" />
		<ee:transform doc:name="Transform Message" doc:id="1ee0395a-14c5-4414-b4f8-ad1675e458e3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7bfcf043-8ceb-4065-a7d2-ff74e096fadc" message="#[payload]"/>
	</flow>
	<flow name="basicFlowForCSVs" doc:id="5763da06-86eb-4612-b21b-f582da2e597a">
		<http:listener doc:name="Copy_of_Listener" doc:id="a35eec05-7c0a-4b5e-9eb0-ba43619dabaa" config-ref="HTTP_Listener_config" path="/mainpayloadtest" />
		<scatter-gather doc:name="Copy_of_Scatter-Gather" doc:id="fe69d910-9a87-4016-947c-486016e4becb">
			<route>
				<flow-ref doc:name="Copy_of_ordersCSVFlowRef" doc:id="514535ea-4676-4513-a75e-d9ff336d4f24" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_ordersCSV" doc:id="e271cb2c-9488-4628-84ce-137b09d960c8" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_productsCSVFlowRef" doc:id="4235f6a6-a61c-45c5-a6b3-faec952220a2" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_productsCSV" doc:id="b1c8a784-790e-41df-b3ca-887ff4293df1" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_transactionsCSVFlowRef" doc:id="60355981-1709-4a96-b780-8c89e716844a" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_transactionsCSV" doc:id="8950dfd1-dff2-4e99-a14e-4c142360bd86" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_major transform" doc:id="b6bb0755-277c-45e8-accf-cbf36202625b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Copy_of_bob" doc:id="87c3e78a-b4ba-42db-9bfa-b4d98d8a8bdd" variableName="bob" />
		<ee:transform doc:name="Copy_of_only successful txns and previous month" doc:id="0e318ba2-0935-4028-8e52-9f75de8f5a63">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="54b2a092-d07e-421b-9e2f-c02193093ebe" />
	</flow>
	<flow name="csv-scatter-gather-testFlow" doc:id="d7f5a5c1-cd2b-45bb-a7b2-8a627ac09c67">

		<http:listener doc:name="Listener" doc:id="568f85e0-8fbb-47f1-8996-1c4d86e323d5" config-ref="HTTP_Listener_config" path="/totalincome"/>

		<scatter-gather doc:name="Scatter-Gather" doc:id="cf6fdb60-c5f8-4a08-b564-f8cb47264ca7">
			<route>
				<flow-ref doc:name="ordersCSVFlowRef" doc:id="5f3a2d73-a29f-42d3-9726-bda23c8ec390" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="ordersCSV" doc:id="35e01c75-ff05-4596-9347-e2c223b6bcaa" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="productsCSVFlowRef" doc:id="16250363-b79b-48aa-a639-ce6049fca2c1" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="productsCSV" doc:id="48e42fbe-87cb-420f-a9f4-04454eacaf98" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="transactionsCSVFlowRef" doc:id="a0299563-e3bf-4489-81aa-beb5e2cc2f3c" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="transactionsCSV" doc:id="673bed6e-6abb-4696-8133-2606c40c60a2" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="major transform" doc:id="84def99d-18b2-4c83-a529-1007f750b59e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="bob" doc:id="813b5908-1ab0-4378-b99e-ab12ada5a6c9" variableName="bob"/>
		<ee:transform doc:name="only successful txns and previous month" doc:id="2dd601e2-b89a-4452-a0cb-605820bc8085" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="quantity * price" doc:id="7b03431c-c4ed-4cd3-bde9-8f86753a95a9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="total Income Per Previous Month" doc:id="01223037-d3b8-438a-af58-46f136be33c4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = payload.Data.total
---
total_Income_Per_Previous_Month: sum(pay1Totals)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b72581fd-2d56-4a5d-a4ed-1e1e2eef73ff" />
	</flow>
	<flow name="byStoreIdFlow" doc:id="c34c00d5-4fbb-41cb-afd0-4c16aee9b376">
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="68852683-8fdd-4f38-a410-6e3c2bf31c89" config-ref="HTTP_Listener_config" path="/storeid" />
		<set-variable value="#[attributes.queryParams.id]" doc:name="queryParamsID" doc:id="a36dca11-8f6c-48f4-a0db-bd663b3f0ae2" variableName="queryParamsID"/>
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="cb17703f-7f5d-473d-9709-1c4e51fd0ef7">
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="c21bba54-4f45-4096-bfd3-7df5bc53eece" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="7e9f5fd7-a943-4ccf-9ba3-d14e28c44a5f" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="46d45b5b-28c5-489c-a14a-d6716c107868" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="18681282-3f2d-446a-909b-3dde1bbd4d2f" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="2d31019b-8195-4dea-91bf-a46ee683d4d3" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="c2a03d96-6738-474a-a5fd-f82422ce294c" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="98fd7ab5-3fde-4b0a-9a0d-c91597e54f95">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="bob" doc:id="ce342e20-329f-4c32-b9e6-10bd131f3fff" variableName="bob" />
		<ee:transform doc:name="Copy_of_only successful txns and previous month" doc:id="695344bc-7572-4b0e-8c2d-4ed5eabac5dd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="getByStoreID" doc:id="1417e33c-cde7-490b-846a-566cf593864c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter ((value, index) -> 
	value.store_id as String == vars.queryParamsID as String
)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_quantity * price" doc:id="a8afd96a-28c9-4b7f-89f1-b8636ca13175">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_total Income Per Previous Month" doc:id="552c444b-507f-4c72-a93d-fb949d7ce4b4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("store_id: " ++ vars.queryParamsID as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="8dd15a26-5a23-4f85-976a-a84f2cea0f86" />
	</flow>
	<flow name="byProductFlow" doc:id="31b703ef-3349-4f0e-83ca-2ea511a7e17a">
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="e8b5c90d-cc3b-4744-9a36-353e220c6bfe" config-ref="HTTP_Listener_config" path="/product" />
		<set-variable value="#[attributes.queryParams.id]" doc:name="queryParamsID" doc:id="26cce4d2-6e5d-43c5-bbe2-b3d1a3d03d13" variableName="queryParamsID"/>
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="c8eb0428-56d4-41c4-97ef-a3639b0bb815">
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="499bc890-80de-4fea-a16b-d3b1f4126a3a" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="6582fc3e-0bac-485c-88fe-049eabde7dbb" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="a7bb574f-a179-4c26-ad3b-9cff0b404749" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="cddcb143-8ce1-4612-b3db-c7de6563aea6" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="68cc9aaf-a29f-44c2-a0d2-d144b24d2bd5" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="b52749c0-467b-4e5e-9324-df531b409b0d" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="03b63ef4-232e-4efb-a772-c13fe8493f07">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Copy_of_bob" doc:id="32061e9e-2e14-40a0-a31f-216143ac21a2" variableName="bob" />
		<ee:transform doc:name="Copy_of_Copy_of_only successful txns and previous month" doc:id="1fe1795a-a74c-45b7-a7db-466e9d4e6534">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="getByProductID" doc:id="a9d2a1b4-7b2b-4260-b2aa-7a7312fd935d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.Data filter ((value, index) -> 
	value.product_id as String == vars.queryParamsID as String
)
//payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_quantity * price" doc:id="ce11e53d-af52-403c-83a6-cad101e45dd7">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_total Income Per Previous Month" doc:id="9b7a7ffb-27c2-4239-88fb-117f9309f3da">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("product_id: " ++ vars.queryParamsID as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="57c07007-6f7a-4a28-960d-a7faf81abcf0" />
	</flow>
	<flow name="orderAPIFlow" doc:id="e908a1d1-908a-40e8-aa32-526535ac4f64">
		<http:listener doc:name="Listener" doc:id="0d5eef2b-5f40-4538-9401-a3d044956249" config-ref="HTTP_Listener_config" path="/testOrderAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="91955e42-70d0-45e3-9646-ac9086dc2d12" path="/order" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="0f60fd38-62b8-4e4b-af09-bccb73c935f4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
//payload map(value, index) -> {
//	product_id: value.product.id
//}
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="aa43048f-896e-412d-8450-885ef0e634a9" />
	</flow>
	<flow name="productAPIFlow" doc:id="ec5eeca6-cf6c-46ea-9774-e72964cd1819">
		<http:listener doc:name="Listener" doc:id="dc1f8bc9-70ff-4012-9676-820f1ea34151" config-ref="HTTP_Listener_config" path="/testProductAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="aa97cea1-d4da-4081-8bdf-ea6857a5d32c" path="/product" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="d3e75af4-1a2f-4770-bc6e-2b85de1d4809">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
//payload map(value, index) -> {
//	product_id: value.id
//}
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8677f42f-efee-4482-98fc-be3939b82395" />
	</flow>
	<flow name="transactionAPIFlow" doc:id="c8c76d47-51ef-45bf-902b-fb5896c236e7" >
		<http:listener doc:name="Listener" doc:id="ca7e807e-5e76-452f-b8f9-2629301934b8" config-ref="HTTP_Listener_config" path="/testTransactionAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="fe41ca36-7a0f-4273-97c1-052f997220b4" path="/transaction" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="2906972a-f5a9-4310-962e-5540d6361390" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8b304c0d-dc6c-4973-b7d3-c777bca8e472" />
	</flow>

	<flow name="flowOfAPIs" doc:id="360cc0ea-989d-4cd2-9406-89f11541235e" >
		<http:listener doc:name="Listener" doc:id="1f2a1bd1-868e-454b-a403-72bf4912f2e2" config-ref="HTTP_Listener_config" path="/scatterAPI"/>

		<scatter-gather doc:name="Scatter-Gather" doc:id="985e58fb-cf18-4844-94d8-2bdff1271cbd" >
			<route >
				<flow-ref doc:name="ordersAPIFlowRef" doc:id="04417184-5857-440d-8851-1e4b9651893b" name="orderAPIFlow"/>
				<set-variable value="#[payload]" doc:name="ordersAPI" doc:id="8cec160d-1c49-4023-8986-577ceb116267" variableName="ordersAPI"/>
			</route>
			<route >
				<flow-ref doc:name="productsAPIFlowRef" doc:id="cc98687c-19ff-420f-af04-585ee4afb288" name="productAPIFlow"/>
				<set-variable value="#[payload]" doc:name="productsAPI" doc:id="06264edd-93be-4ee0-b95b-0404d6966c26" variableName="productsAPI"/>
			</route>
			<route >
				<flow-ref doc:name="transactionsAPIFlowRef" doc:id="55f8a386-60c2-4a70-82c1-94334a9fc77b" name="transactionAPIFlow"/>
				<set-variable value="#[payload]" doc:name="transactionAPI" doc:id="3921ccdd-227e-4287-9d31-00cda6b21841" variableName="transactionAPI"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="16ac0f29-674e-46dd-ad91-12e47775cf85" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
//flatten (payload..payload)
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="byDayOfTheWeek" doc:id="8744fe29-ce14-4823-8d5e-9859cae8f89a" >
		<http:listener doc:name="Listener" doc:id="c1d42808-b1c4-4842-af07-be1a2493d4fc" path="/dayoftheweek" config-ref="HTTP_Listener_config"/>
		<set-variable value="#[attributes.queryParams.dayWeek]" doc:name="dayWeek" doc:id="ae6eb4e2-a144-44c4-b960-a60350aa3a2b" variableName="dayWeek"/>
		<flow-ref doc:name="Flow Reference" doc:id="d40a6ed7-e6f7-40e6-83ed-002fc7912bd7" name="basicFlowForCSVs"/>
		<choice doc:name="Copy_of_Choice by DoTW" doc:id="e303943c-d569-4033-8736-244678ea6c5e" >
			<when expression="#[vars.dayWeek == '1']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 1" doc:id="229acfd9-6aba-4b22-989b-b7256ea0ec40" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 1)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Monday",
	"Data": payload
}]' doc:name="Copy_of_Set Payload to Sunday" doc:id="a14781ee-a7cb-4a41-a6be-7ac0fed84086" />
			</when>
			<when expression="#[vars.dayWeek == '2']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 2" doc:id="831d35cd-58c8-42e2-b3b2-f4e9d61a8c68" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 2)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Tuesday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Monday" doc:id="2f0600a2-2dc8-4ba8-85d1-f6327463775f" />
			</when>
			<when expression="#[vars.dayWeek == '3']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 3" doc:id="a4382fa7-98e6-47bc-974b-803e9139e490" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 3)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Wednesday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Tuesday" doc:id="9adce357-2aa2-4221-8307-86231be86c72" />
			</when>
			<when expression="#[vars.dayWeek == '4']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 4" doc:id="fd900e58-a0de-4733-be01-af6272a1c06a" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 4)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Thursday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Wednesday" doc:id="fc15b377-b034-44f9-b942-9c242b98e941" />
			</when>
			<when expression="#[vars.dayWeek == '5']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 5" doc:id="d9337d80-056e-4b63-8df2-fcfcdbf6ffc1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 5)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Friday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Thursday" doc:id="0c7c1bdd-07c6-4226-bedc-5a1ee0bf9449" />
			</when>
			<when expression="#[vars.dayWeek == '6']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 6" doc:id="35c7d213-d2c2-4c73-bbf7-2711746126ee" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 6)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Saturday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Friday" doc:id="6dd1cd60-2e1e-48f6-9c67-54d66655a874" />
			</when>
			<when expression="#[vars.dayWeek == '7']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 7" doc:id="99d3d7be-7e3b-4a9b-be8e-4733eca3fe14" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 7)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Sunday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Saturday" doc:id="1c58a549-2659-4d9b-aa9e-c6c0b4444c51" />
			</when>
			<otherwise >
				<set-payload value="No Day Of Week Specified." doc:name="Copy_of_Default Payload if No DoTW is provided" doc:id="55473cfb-7038-438b-a362-ed6701b2da88" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Copy_of_Copy_of_Copy_of_quantity * price" doc:id="b9de3d4e-61bf-4471-b291-8866b4106690" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_Copy_of_total Income Per Previous Month" doc:id="1a38442c-9c4d-434a-8e4e-9bf72ccb3580" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("day_week: " ++ vars.dayWeek as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="Copy_of_referenceFlowWhenCombiningCSVsAndAPIs" doc:id="d8035e29-f375-4247-868b-6a71ddc104b5" >
		<flow-ref doc:name="ordersCSVFlowRef" doc:id="417f9478-c84c-4eb8-9720-e34b75c5dec1" name="ordersCSVFlow" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="725ae1b0-2956-446d-97f1-f54fca4fe4ce" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//transform into standard format as usually using
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as payload" doc:id="b0d555f9-d50e-46f6-8ea4-4f65b8b156ec" variableName="var1" />
		<http:request method="GET" doc:name="Copy_of_requestPayloadFromOrdersCSV" doc:id="1c1751dd-7847-46eb-80a8-84420e4a2b0d" config-ref="HTTP_Request_configuration" path="/dummypath" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="c6bcaa4c-b0c8-4264-b16d-03b27bb3b519" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//transform payload as payload usually used
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as API payload" doc:id="f4bb81ba-9b9e-427e-b06e-4fd658cb2cab" variableName="var2" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="b402e326-23d3-4f7f-be9c-3595e745a56c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//flatten (var1..var2)
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as ordersCSV and ordersAPI" doc:id="12bcfbb7-41aa-4e20-b507-d61c3abb1d9f" variableName="var3" />
	</flow>
	<flow name="test3" doc:id="73e9aa9b-8603-4aec-9c6e-15a77b6a6e82" >
		<http:listener doc:name="Listener" doc:id="e963224a-8a29-4219-b46d-a182eb75e397" path="/test3" config-ref="HTTP_Listener_config"/>
		<scatter-gather doc:name="Scatter-Gather" doc:id="f0d61242-3ae6-4c3a-8ed9-29fbf275a2c5" >
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="b3bebc01-b0c2-4ee6-9975-89c5443bee6c" name="ordersCSVFlow" />
				<ee:transform doc:name="Transform Message" doc:id="6d379c7b-9bae-4ee2-8cb2-44289b576036">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> {
	order_qty: item.qty,
	date: item.datetime,
	product_id: item.product_id,
	price: "5",
	transaction_success: "yes"
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<ee:transform doc:name="Transform Message" doc:id="9d73418c-f92e-4a29-bf68-9bcd228807fd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.date.month < now().month and $.date.month > now().month -2 )]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="var1" doc:id="9795bff8-22ff-4170-bb01-cd24eb5b011e" variableName="var1" />
				<http:request method="GET" doc:name="Request" doc:id="d910bab5-2a45-46fb-9a0e-9a762a5e18fd" config-ref="HTTP_Request_configuration" path="/order" />
				<ee:transform doc:name="Transform Message" doc:id="1a838e07-c3d4-401f-b3f7-1db19d4f5bb5">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (item, indext) -> {
	order_qty: item.quantity,
	date: item.date,
	product_id: item.product.id,
	price: item.product.price,
	transaction_success: item.transaction.success
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<ee:transform doc:name="Transform Message" doc:id="2e90fc2b-75df-4f2d-9968-0d48b87976dd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.date.month < now().month and $.date.month > now().month - 2 and $.transaction_success == true)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="var2" doc:id="34d882d0-8d77-45b2-b876-5fb7afccd1cc" variableName="var2" />
				<ee:transform doc:name="Transform Message" doc:id="f3738bf1-a579-461e-9266-2a792cc66561">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
flatten(vars.var1 + vars.var2)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<ee:transform doc:name="Transform Message" doc:id="d421c1c7-3d83-4ce0-aaa6-627f4d670778" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
//payload filter ($.transaction_success_csv == "yes" and $.date_csv.month > now().month -2 and $.date_csv.month < now().month)
//payload filter ($.date_api.month < now().month)
//payload filter ($.date_csv.month < now().month)
//	$.date_api.month > now().month -2 
//	$.date_api.month < now().month
//	$.transaction_success_api == true //this part works

payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="var3" doc:id="b542fa89-2cda-4142-b336-40d5d29016aa" variableName="var3"/>
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="b2b99b0b-c952-4342-9a5e-23a9550daf3f" name="productsCSVFlow"/>
				<ee:transform doc:name="Transform Message" doc:id="b6212a91-47c9-4bf7-98fa-1a1238367eda" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="var11" doc:id="429266ab-2f5c-44db-83e3-038be303991c" variableName="var11"/>
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="45b8fc4f-62ad-48d5-ac9d-9da58a0bb872" name="transactionsCSVFlow"/>
				<ee:transform doc:name="Transform Message" doc:id="84c1bcc3-44f4-429e-88da-543815b4c33b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="var111" doc:id="30cb10eb-74fe-4b79-9bfb-0315ae406f3c" variableName="var111"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="21d0cb9d-6bac-4117-b936-a05e895a8ee4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.var3]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="test22" doc:id="7091b600-b11b-415b-a2fc-7842f43b96b1">
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="98f78166-5fbf-4d2e-bcac-1504e63dc0be" config-ref="HTTP_Listener_config" path="/test22" />
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="7420902b-dca7-43c8-b5be-98eb7f7acd64">
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="8cfd45b6-e221-427a-86b6-5042155f6299" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="76e1b5e9-6a33-4536-9d3a-d1baffdb71d3" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="36e761df-9316-41e9-a1ad-23779c394146" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="2d8b320b-7614-40c1-84c2-9a63d3c14383" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="49d6068c-7940-4f7e-b47a-cecebfeebb2b" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="e4876848-6054-46d3-873a-2f7e058670ed" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="eee81f9c-eeb6-4b88-b172-f470752c9919">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": (var2.price as String replace /[$]/ with("")) as Number 
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_bob" doc:id="a86b06f9-2907-4116-800f-86a4911e4dd1" variableName="bob" />
		<ee:transform doc:name="Copy_of_Copy_of_only successful txns and previous month" doc:id="d2370132-ed9c-4e9f-b707-fdc2840555f9">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month - 2 and $.date.month < now().month)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="var1" doc:id="1af8832b-abb0-408f-8fab-75196052427c" variableName="var1" />
		<http:request method="GET" doc:name="callAPI" doc:id="8187ba2c-1b7a-425a-b9a4-7233c2d5d193" config-ref="HTTP_Request_configuration" path="/order" />
		<ee:transform doc:name="formatAPIData" doc:id="73e09f4c-810b-4948-85bd-48b9060bf007">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map (item, indext) -> {
	order_qty: item.quantity,
	date: item.date,
	store_id: item.storeId,
	product_id: item.product.id,
	price: item.product.price,
	transaction_success: item.transaction.success
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="previousMonthAPIData" doc:id="e09fe1b9-a885-4fac-a7d2-85051175f5ba">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload filter ($.date.month < now().month and $.date.month > now().month - 2 and $.transaction_success == true)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="var2" doc:id="b2720c37-987e-4d1c-be9d-4d2b76ee9cb2" variableName="var2" />
		<ee:transform doc:name="combine CSV and API" doc:id="77831147-296e-4e1e-8e54-33656a5425c1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
flatten(vars.var1 + vars.var2)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="176bf407-ddbf-4f00-92bf-0cfaf17f8c33" />
	</flow>
	<flow name="APIandCSVDATA_totalIncome" doc:id="c5d0c8b0-565d-4d14-a477-446482e84792" >
		<http:listener doc:name="Listener" doc:id="f770f319-a4fa-4fb1-893f-d5061f4b45bf" config-ref="HTTP_Listener_config" path="/totalQuantityIncomePrevMonth"/>
		<flow-ref doc:name="Flow Reference" doc:id="e6a690a2-1c28-4fad-8d7e-266fc1557098" name="test22"/>
		<set-variable value="#[payload]" doc:name="var3" doc:id="af565631-a191-403a-8afd-c9bace466a90" variableName="var3"/>
		<ee:transform doc:name="multiply quantiy * price" doc:id="504df71f-9684-4961-9980-4b20dcbb764a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.var3 map (item, index) -> {
	total: item.order_qty as Number * item.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="sum totals of each object to get totalprice of previous month" doc:id="8edb5fb7-a0a7-465d-9f81-56c67238268d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var total_income_of_prev_month = payload reduce ((item, acc=0) -> acc +
    if (item.total != "") item.total as Number
    else 0
)
---
"total_income_of_prev_month": total_income_of_prev_month
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="scatter-gather-testFlow_storeID" doc:id="d3ca071b-4d64-436f-b4dc-112b6a96c357" >
		<http:listener doc:name="Listener" doc:id="f0133244-6bd3-46a7-af10-773248100f08" path="/totalQuantityIncomePrevMonth/storeId" config-ref="HTTP_Listener_config"/>
		<set-variable value="#[attributes.queryParams.storeId]" doc:name="queryParamsStoreId" doc:id="792ed8e8-11ab-4779-ba2e-ead41d621e5d" variableName="queryParamsStoreId"/>
		<flow-ref doc:name="Flow Reference" doc:id="357045b6-f9ce-4fc4-be31-7d0b678d6477" name="test22"/>
		<ee:transform doc:name="Transform Message" doc:id="637b6e0c-00c6-4cd3-a3d1-9f069aff89e6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map(item, index) -> {
	"order_qty": item.order_qty as Number,
    "date": item.date,
    "store_id": item.store_id,
    "product_id": item.product_id,
    "price": item.price,
    "transaction_success": item.transaction_success as String
}
//payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="c0f4695f-2fa8-4ba3-9482-6d1926ee0a60" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.store_id as String == vars.queryParamsStoreId as String)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="cd00708d-43aa-4718-8fe1-839215bda6f1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> {
	data: item.order_qty * item.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="43fd37ff-885c-498e-ac37-726d1f930840" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

data: "store_id: " ++ vars.queryParamsStoreId ++ ", total_income: " ++ sum(payload.data)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="scatter-gather-testFlow1_productId" doc:id="46698c20-7648-4481-b0f8-99efc415df0f" >
		<http:listener doc:name="Listener" doc:id="b305ddde-2b4c-4b48-b382-7f205b1aa5db" config-ref="HTTP_Listener_config" path="/totalQuantityIncomePrevMonth/productId"/>
		<set-variable value="#[attributes.queryParams.productId]" doc:name="queryParamsProductId" doc:id="71f8b483-2fbd-46ff-ab2e-4da9a20fcd61" variableName="queryParamsProductId"/>
		<flow-ref doc:name="Flow Reference" doc:id="fc40c478-1158-4c3f-bef4-5ae73a511908" name="test22"/>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="b3d1bded-c338-4bc6-9f41-5a8a1e354e76" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map(item, index) -> {
	"order_qty": item.order_qty as Number,
    "date": item.date,
    "store_id": item.store_id,
    "product_id": item.product_id,
    "price": item.price,
    "transaction_success": item.transaction_success as String
}
//payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="73446d89-d0e9-480a-a30f-7300b794252e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.product_id as String == vars.queryParamsProductId as String)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="27e74844-7449-48d2-a802-1b1a1789e7d7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> {
	data: item.order_qty * item.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="d0d96df7-dcb2-4ae5-952d-5c9e388c177c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

data: "product_id: " ++ vars.queryParamsProductId ++ ", total_income: " ++ sum(payload.data)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="scatter-gather-testFlow2" doc:id="d5297323-ed0c-40f4-80a4-f696be7f7d0e" >
		<http:listener doc:name="Listener" doc:id="d340f307-e51b-46c3-a0c4-f86385c8c794" config-ref="HTTP_Listener_config" path="/totalQuantityIncomePrevMonth/dayWeek"/>
		<set-variable value="#[attributes.queryParams.dayWeek]" doc:name="queryParamsDayWeek" doc:id="f13d3371-6b9a-45b2-a8e6-7c31814f841a" variableName="queryParamsDayWeek"/>
		<flow-ref doc:name="Flow Reference" doc:id="d4693793-ada9-4f83-b90f-a9e120da7569" name="test22"/>
		<choice doc:name="Copy_of_Copy_of_Choice by DoTW" doc:id="5f4c839d-1b3f-427d-8e2d-a78767a2b335" >
			<when expression="#[vars.queryParamsDayWeek == '1']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 1" doc:id="5a20da3c-cd27-47c2-9f94-f326f254a6ff" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 1)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Monday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Copy_of_Set Payload to Sunday" doc:id="5d789afb-3821-45a9-b629-75f4622134e9" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '2']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 2" doc:id="f5034947-13ff-452b-a9db-36fdb2d1a062" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 2)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Tuesday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Monday" doc:id="266803dd-d825-498f-9587-51567decbafe" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '3']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 3" doc:id="37b5f14a-5aeb-4e27-9587-6f8de7454ff2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 3)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Wednesday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Tuesday" doc:id="5a74253a-2da8-4702-a39f-123b11105ec1" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '4']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 4" doc:id="d6edeefc-8a0e-416a-ac24-4b38fe73383e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 4)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Thursday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Wednesday" doc:id="a5640d44-1df7-49d0-92b9-4a5ff6a599ac" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '5']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 5" doc:id="7a9dc5b1-25d3-4cce-8632-64a9aff4763e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 5)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Friday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Thursday" doc:id="24983955-cdc2-479f-b7ea-e85be33e73ca" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '6']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 6" doc:id="dd5d8868-08f6-406f-a1a9-781ee404a1cf" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 6)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Saturday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Friday" doc:id="058ef1dd-0af4-410d-aaab-e61ac8c721b2" />
			</when>
			<when expression="#[vars.queryParamsDayWeek == '7']" >
				<ee:transform doc:name="Copy_of_Copy_of_Transform if Dotw == 7" doc:id="c4c5678d-7226-4916-a4ab-9faacfd27a26" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter((value, index) -> value.date.dayOfWeek == 7)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Sunday",
	"Data": payload
}]' doc:name="Copy_of_Copy_of_Set Payload to Saturday" doc:id="de9c3f24-f831-46fd-8322-13d64b786a5b" />
			</when>
			<otherwise >
				<set-payload value="No Day Of Week Specified." doc:name="Copy_of_Copy_of_Default Payload if No DoTW is provided" doc:id="79491a24-26d8-45c6-bec0-6c539375d5ce" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="6aea1f7b-60ac-44e7-8301-8fdc9c7b3874" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
//payload
payload.Data map {
	order_qty: $.order_qty as Number,
	price: $.price,
	date: $.date
}

//%dw 2.0
//output application/json
//var pay1 = payload.Data
//---
//Data: (pay1 map {
//	quantity: $.order_qty,
//	price: $.price,
//	store_id: $.store_id,
//	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
//})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="a8df1eb8-a1de-41bc-af0f-a0baadac1b86" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map {
	data: $.order_qty * $.price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="1980033b-8323-4ec8-9dcf-99586b39eafd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
data: "day_of_the_week: " ++ vars.queryParamsDayWeek ++ ", total_income: " ++ sum(payload.data)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	
	
	
	
</mule>
