<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="helloFlow" doc:id="625d821d-0e98-4015-beee-2c5876694459">
		<http:listener doc:name="Listener" doc:id="aadae3f3-5e6c-4015-a435-b28afa8aa75d" path="/hello" config-ref="HTTP_Listener_config"/>
		<set-payload value="hello world" doc:name="Set Payloadd" doc:id="7e56a8d5-81a8-40fb-a9db-a2ab1f3e782e" />
	</flow>
	<flow name="ordersCSVFlow" doc:id="5630baea-c3f2-40f6-bd89-de1942dac0ae">
		<http:listener doc:name="Listener" doc:id="6687f4db-b743-4934-b786-94e82ddfdff6" config-ref="HTTP_Listener_config" path="/ordersTeam2"/>
		<file:read doc:name="readOrdersCSV" doc:id="d9fc7056-146b-468a-8080-a8b99e58886d" config-ref="File_Config" path="C:\Users\benor\OneDrive\Documents\Mulesoft_Cohort_p3\src\main\resources\csvs\csvs for p3\Orders.csv" />
		<ee:transform doc:name="Transform Message" doc:id="f579f233-a765-4d8b-9187-304109caa334">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="4e22176d-8be3-42b9-bf7f-0279a61a4510" message="#[payload]"/>
	</flow>
	<flow name="productsCSVFlow" doc:id="c31ef09c-35cb-4c01-b05a-ee4f6a3d2e27" >
		<http:listener doc:name="Listener" doc:id="8401fbfe-d8b1-4122-b226-04d71451e94a" path="/productsTeam2" config-ref="HTTP_Listener_config"/>
		<file:read doc:name="readProductsCSV" doc:id="b8c75dd9-5c37-4a2b-a703-e11c9bfbb88d" config-ref="File_Config" path="C:\Users\benor\OneDrive\Desktop\csvs for p3\Products.csv" />
		<ee:transform doc:name="Transform Message" doc:id="5fb61567-25e8-4be3-abf1-301006ed157b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="69ed7360-a096-4c3c-a51e-a5ae6cdfec02" message="#[payload]"/>
	</flow>
	<flow name="transactionsCSVFlow" doc:id="bc31397d-f46f-4bca-ba27-3ad8e90ca0ad" >
		<http:listener doc:name="Listener" doc:id="6bb7754e-5909-477a-bec5-76c3abb1f851" config-ref="HTTP_Listener_config" path="/transactionsTeam2"/>
		<file:read doc:name="readTransactionsCSV" doc:id="688c792f-3299-45e2-b4ee-c2aad7dbc1cd" config-ref="File_Config" path="C:\Users\benor\OneDrive\Desktop\csvs for p3\Transactions.csv" />
		<ee:transform doc:name="Transform Message" doc:id="1ee0395a-14c5-4414-b4f8-ad1675e458e3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7bfcf043-8ceb-4065-a7d2-ff74e096fadc" message="#[payload]"/>
	</flow>
	<flow name="basicFlowForCSVs" doc:id="5763da06-86eb-4612-b21b-f582da2e597a">
		<http:listener doc:name="Copy_of_Listener" doc:id="a35eec05-7c0a-4b5e-9eb0-ba43619dabaa" config-ref="HTTP_Listener_config" path="/mainpayloadtest" />
		<scatter-gather doc:name="Copy_of_Scatter-Gather" doc:id="fe69d910-9a87-4016-947c-486016e4becb">
			<route>
				<flow-ref doc:name="Copy_of_ordersCSVFlowRef" doc:id="514535ea-4676-4513-a75e-d9ff336d4f24" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_ordersCSV" doc:id="e271cb2c-9488-4628-84ce-137b09d960c8" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_productsCSVFlowRef" doc:id="4235f6a6-a61c-45c5-a6b3-faec952220a2" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_productsCSV" doc:id="b1c8a784-790e-41df-b3ca-887ff4293df1" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_transactionsCSVFlowRef" doc:id="60355981-1709-4a96-b780-8c89e716844a" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_transactionsCSV" doc:id="8950dfd1-dff2-4e99-a14e-4c142360bd86" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_major transform" doc:id="b6bb0755-277c-45e8-accf-cbf36202625b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Copy_of_bob" doc:id="87c3e78a-b4ba-42db-9bfa-b4d98d8a8bdd" variableName="bob" />
		<ee:transform doc:name="Copy_of_only successful txns and previous month" doc:id="0e318ba2-0935-4028-8e52-9f75de8f5a63">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="54b2a092-d07e-421b-9e2f-c02193093ebe" />
	</flow>
	<flow name="csv-scatter-gather-testFlow" doc:id="d7f5a5c1-cd2b-45bb-a7b2-8a627ac09c67">

		<http:listener doc:name="Listener" doc:id="568f85e0-8fbb-47f1-8996-1c4d86e323d5" config-ref="HTTP_Listener_config" path="/totalincome"/>

		<scatter-gather doc:name="Scatter-Gather" doc:id="cf6fdb60-c5f8-4a08-b564-f8cb47264ca7">
			<route>
				<flow-ref doc:name="ordersCSVFlowRef" doc:id="5f3a2d73-a29f-42d3-9726-bda23c8ec390" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="ordersCSV" doc:id="35e01c75-ff05-4596-9347-e2c223b6bcaa" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="productsCSVFlowRef" doc:id="16250363-b79b-48aa-a639-ce6049fca2c1" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="productsCSV" doc:id="48e42fbe-87cb-420f-a9f4-04454eacaf98" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="transactionsCSVFlowRef" doc:id="a0299563-e3bf-4489-81aa-beb5e2cc2f3c" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="transactionsCSV" doc:id="673bed6e-6abb-4696-8133-2606c40c60a2" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="major transform" doc:id="84def99d-18b2-4c83-a529-1007f750b59e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="bob" doc:id="813b5908-1ab0-4378-b99e-ab12ada5a6c9" variableName="bob"/>
		<ee:transform doc:name="only successful txns and previous month" doc:id="2dd601e2-b89a-4452-a0cb-605820bc8085" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="quantity * price" doc:id="7b03431c-c4ed-4cd3-bde9-8f86753a95a9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="total Income Per Previous Month" doc:id="01223037-d3b8-438a-af58-46f136be33c4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = payload.Data.total
---
total_Income_Per_Previous_Month: sum(pay1Totals)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b72581fd-2d56-4a5d-a4ed-1e1e2eef73ff" />
	</flow>
	<flow name="byStoreIdFlow" doc:id="c34c00d5-4fbb-41cb-afd0-4c16aee9b376">
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="68852683-8fdd-4f38-a410-6e3c2bf31c89" config-ref="HTTP_Listener_config" path="/storeid" />
		<set-variable value="#[attributes.queryParams.id]" doc:name="queryParamsID" doc:id="a36dca11-8f6c-48f4-a0db-bd663b3f0ae2" variableName="queryParamsID"/>
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="cb17703f-7f5d-473d-9709-1c4e51fd0ef7">
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="c21bba54-4f45-4096-bfd3-7df5bc53eece" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="7e9f5fd7-a943-4ccf-9ba3-d14e28c44a5f" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="46d45b5b-28c5-489c-a14a-d6716c107868" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="18681282-3f2d-446a-909b-3dde1bbd4d2f" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="2d31019b-8195-4dea-91bf-a46ee683d4d3" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="c2a03d96-6738-474a-a5fd-f82422ce294c" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="98fd7ab5-3fde-4b0a-9a0d-c91597e54f95">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="bob" doc:id="ce342e20-329f-4c32-b9e6-10bd131f3fff" variableName="bob" />
		<ee:transform doc:name="Copy_of_only successful txns and previous month" doc:id="695344bc-7572-4b0e-8c2d-4ed5eabac5dd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="getByStoreID" doc:id="1417e33c-cde7-490b-846a-566cf593864c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter ((value, index) -> 
	value.store_id as String == vars.queryParamsID as String
)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_quantity * price" doc:id="a8afd96a-28c9-4b7f-89f1-b8636ca13175">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_total Income Per Previous Month" doc:id="552c444b-507f-4c72-a93d-fb949d7ce4b4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("store_id: " ++ vars.queryParamsID as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="8dd15a26-5a23-4f85-976a-a84f2cea0f86" />
	</flow>
	<flow name="byProductFlow" doc:id="31b703ef-3349-4f0e-83ca-2ea511a7e17a">
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="e8b5c90d-cc3b-4744-9a36-353e220c6bfe" config-ref="HTTP_Listener_config" path="/product" />
		<set-variable value="#[attributes.queryParams.id]" doc:name="queryParamsID" doc:id="26cce4d2-6e5d-43c5-bbe2-b3d1a3d03d13" variableName="queryParamsID"/>
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="c8eb0428-56d4-41c4-97ef-a3639b0bb815">
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="499bc890-80de-4fea-a16b-d3b1f4126a3a" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="6582fc3e-0bac-485c-88fe-049eabde7dbb" variableName="ordersCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="a7bb574f-a179-4c26-ad3b-9cff0b404749" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="cddcb143-8ce1-4612-b3db-c7de6563aea6" variableName="productsCSV" />
			</route>
			<route>
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="68cc9aaf-a29f-44c2-a0d2-d144b24d2bd5" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="b52749c0-467b-4e5e-9324-df531b409b0d" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="03b63ef4-232e-4efb-a772-c13fe8493f07">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Copy_of_bob" doc:id="32061e9e-2e14-40a0-a31f-216143ac21a2" variableName="bob" />
		<ee:transform doc:name="Copy_of_Copy_of_only successful txns and previous month" doc:id="1fe1795a-a74c-45b7-a7db-466e9d4e6534">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
//var myDate = pay1.date as Date
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month) map(items, index) -> {
	"Data": items
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="getByProductID" doc:id="a9d2a1b4-7b2b-4260-b2aa-7a7312fd935d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.Data filter ((value, index) -> 
	value.product_id as String == vars.queryParamsID as String
)
//payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_quantity * price" doc:id="ce11e53d-af52-403c-83a6-cad101e45dd7">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_total Income Per Previous Month" doc:id="9b7a7ffb-27c2-4239-88fb-117f9309f3da">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("product_id: " ++ vars.queryParamsID as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="57c07007-6f7a-4a28-960d-a7faf81abcf0" />
	</flow>
	<flow name="orderAPIFlow" doc:id="e908a1d1-908a-40e8-aa32-526535ac4f64">
		<http:listener doc:name="Listener" doc:id="0d5eef2b-5f40-4538-9401-a3d044956249" config-ref="HTTP_Listener_config" path="/testOrderAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="91955e42-70d0-45e3-9646-ac9086dc2d12" path="/order" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="0f60fd38-62b8-4e4b-af09-bccb73c935f4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
//payload map(value, index) -> {
//	product_id: value.product.id
//}
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="aa43048f-896e-412d-8450-885ef0e634a9" />
	</flow>
	<flow name="productAPIFlow" doc:id="ec5eeca6-cf6c-46ea-9774-e72964cd1819">
		<http:listener doc:name="Listener" doc:id="dc1f8bc9-70ff-4012-9676-820f1ea34151" config-ref="HTTP_Listener_config" path="/testProductAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="aa97cea1-d4da-4081-8bdf-ea6857a5d32c" path="/product" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="d3e75af4-1a2f-4770-bc6e-2b85de1d4809">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
//payload map(value, index) -> {
//	product_id: value.id
//}
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8677f42f-efee-4482-98fc-be3939b82395" />
	</flow>
	<flow name="transactionAPIFlow" doc:id="c8c76d47-51ef-45bf-902b-fb5896c236e7" >
		<http:listener doc:name="Listener" doc:id="ca7e807e-5e76-452f-b8f9-2629301934b8" config-ref="HTTP_Listener_config" path="/testTransactionAPI"/>
		<http:request method="GET" doc:name="Request" doc:id="fe41ca36-7a0f-4273-97c1-052f997220b4" path="/transaction" config-ref="HTTP_Request_configuration"/>
		<ee:transform doc:name="Transform Message" doc:id="2906972a-f5a9-4310-962e-5540d6361390" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8b304c0d-dc6c-4973-b7d3-c777bca8e472" />
	</flow>

	<flow name="flowOfAPIs" doc:id="360cc0ea-989d-4cd2-9406-89f11541235e" >
		<http:listener doc:name="Listener" doc:id="1f2a1bd1-868e-454b-a403-72bf4912f2e2" config-ref="HTTP_Listener_config" path="/scatterAPI"/>

		<scatter-gather doc:name="Scatter-Gather" doc:id="985e58fb-cf18-4844-94d8-2bdff1271cbd" >
			<route >
				<flow-ref doc:name="ordersAPIFlowRef" doc:id="04417184-5857-440d-8851-1e4b9651893b" name="orderAPIFlow"/>
				<set-variable value="#[payload]" doc:name="ordersAPI" doc:id="8cec160d-1c49-4023-8986-577ceb116267" variableName="ordersAPI"/>
			</route>
			<route >
				<flow-ref doc:name="productsAPIFlowRef" doc:id="cc98687c-19ff-420f-af04-585ee4afb288" name="productAPIFlow"/>
				<set-variable value="#[payload]" doc:name="productsAPI" doc:id="06264edd-93be-4ee0-b95b-0404d6966c26" variableName="productsAPI"/>
			</route>
			<route >
				<flow-ref doc:name="transactionsAPIFlowRef" doc:id="55f8a386-60c2-4a70-82c1-94334a9fc77b" name="transactionAPIFlow"/>
				<set-variable value="#[payload]" doc:name="transactionAPI" doc:id="3921ccdd-227e-4287-9d31-00cda6b21841" variableName="transactionAPI"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="16ac0f29-674e-46dd-ad91-12e47775cf85" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
//flatten (payload..payload)
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="scatter-gather-testFlow" doc:id="8744fe29-ce14-4823-8d5e-9859cae8f89a" >
		<http:listener doc:name="Listener" doc:id="c1d42808-b1c4-4842-af07-be1a2493d4fc" path="/dayoftheweek" config-ref="HTTP_Listener_config"/>
		<set-variable value="#[attributes.queryParams.dayWeek]" doc:name="dayWeek" doc:id="ae6eb4e2-a144-44c4-b960-a60350aa3a2b" variableName="dayWeek"/>
		<flow-ref doc:name="Flow Reference" doc:id="d40a6ed7-e6f7-40e6-83ed-002fc7912bd7" name="basicFlowForCSVs"/>
		<choice doc:name="Copy_of_Choice by DoTW" doc:id="e303943c-d569-4033-8736-244678ea6c5e" >
			<when expression="#[vars.dayWeek == '1']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 1" doc:id="229acfd9-6aba-4b22-989b-b7256ea0ec40" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 1)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{
	"day of week": "Monday",
	"Data": payload
}]' doc:name="Copy_of_Set Payload to Sunday" doc:id="a14781ee-a7cb-4a41-a6be-7ac0fed84086" />
			</when>
			<when expression="#[vars.dayWeek == '2']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 2" doc:id="831d35cd-58c8-42e2-b3b2-f4e9d61a8c68" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 2)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Tuesday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Monday" doc:id="2f0600a2-2dc8-4ba8-85d1-f6327463775f" />
			</when>
			<when expression="#[vars.dayWeek == '3']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 3" doc:id="a4382fa7-98e6-47bc-974b-803e9139e490" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 3)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Wednesday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Tuesday" doc:id="9adce357-2aa2-4221-8307-86231be86c72" />
			</when>
			<when expression="#[vars.dayWeek == '4']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 4" doc:id="fd900e58-a0de-4733-be01-af6272a1c06a" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 4)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Thursday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Wednesday" doc:id="fc15b377-b034-44f9-b942-9c242b98e941" />
			</when>
			<when expression="#[vars.dayWeek == '5']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 5" doc:id="d9337d80-056e-4b63-8df2-fcfcdbf6ffc1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 5)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Friday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Thursday" doc:id="0c7c1bdd-07c6-4226-bedc-5a1ee0bf9449" />
			</when>
			<when expression="#[vars.dayWeek == '6']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 6" doc:id="35c7d213-d2c2-4c73-bbf7-2711746126ee" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 6)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Saturday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Friday" doc:id="6dd1cd60-2e1e-48f6-9c67-54d66655a874" />
			</when>
			<when expression="#[vars.dayWeek == '7']" >
				<ee:transform doc:name="Copy_of_Transform if Dotw == 7" doc:id="99d3d7be-7e3b-4a9b-be8e-4733eca3fe14" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.Data filter((value, index) -> value.date.dayOfWeek == 7)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value='#[{&#10;	"day of week": "Sunday",&#10;	"Data": payload&#10;}]' doc:name="Copy_of_Set Payload to Saturday" doc:id="1c58a549-2659-4d9b-aa9e-c6c0b4444c51" />
			</when>
			<otherwise >
				<set-payload value="No Day Of Week Specified." doc:name="Copy_of_Default Payload if No DoTW is provided" doc:id="55473cfb-7038-438b-a362-ed6701b2da88" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Copy_of_Copy_of_Copy_of_quantity * price" doc:id="b9de3d4e-61bf-4471-b291-8866b4106690" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
---
Data: (pay1 map {
	quantity: $.order_qty,
	price: $.price,
	store_id: $.store_id,
	total: $.order_qty as Number * ($.price as String replace /[$]/ with("")) as Number
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Copy_of_Copy_of_total Income Per Previous Month" doc:id="1a38442c-9c4d-434a-8e4e-9bf72ccb3580" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = payload.Data
var pay1Totals = pay1.total
---
total_Income_Per_Previous_Month: ("day_week: " ++ vars.dayWeek as String ++ " total: " ++ sum(pay1Totals)) as String
//pay1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="test2" doc:id="da124a01-519d-417c-8978-e46c9aa9308d" >
		<http:listener doc:name="Copy_of_Copy_of_Listener" doc:id="06b2a23c-a15c-43e1-b5e6-ec0dfc640dea" config-ref="HTTP_Listener_config" path="/test2" />
		<scatter-gather doc:name="Copy_of_Copy_of_Scatter-Gather" doc:id="57039c1d-e916-4dca-8d5c-0fed8e634366" >
			<route >
				<flow-ref doc:name="Copy_of_Copy_of_ordersCSVFlowRef" doc:id="bcb6434c-b222-49aa-9bf0-dba772358029" name="ordersCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_ordersCSV" doc:id="f77f20a0-100a-48fb-bcad-9d43325c9ec0" variableName="ordersCSV" />
			</route>
			<route >
				<flow-ref doc:name="Copy_of_Copy_of_productsCSVFlowRef" doc:id="d7d6b7e0-ae0d-4614-af63-c264748662e7" name="productsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_productsCSV" doc:id="c6943ef3-f702-4f2a-af82-d003c86e6711" variableName="productsCSV" />
			</route>
			<route >
				<flow-ref doc:name="Copy_of_Copy_of_transactionsCSVFlowRef" doc:id="b0ff919c-6697-4912-a5c4-67c53c37ea55" name="transactionsCSVFlow" />
				<set-variable value="#[payload]" doc:name="Copy_of_Copy_of_transactionsCSV" doc:id="344b2c12-6f35-4135-a9f4-1fdfb330eba5" variableName="transactionsCSV" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Copy_of_Copy_of_major transform" doc:id="e541cd09-bd2e-4c6d-8cde-909ebb7e1a41" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var ordersCSV = vars.ordersCSV
var productsCSV = vars.productsCSV
var transactionsCSV = vars.transactionsCSV
---
Data : ordersCSV map (ordersItems, indexOfOrdersItems) -> {
	"order_qty": ordersItems.qty,
	"date": ordersItems.datetime,
	"store_id": ordersItems.store_id,
	"product_id": ordersItems.product_id,
	(productsCSV filter ($."product_id" == ordersItems."product_id") map (var2, indexVar2) -> {
	"price": var2.price
	}),
	(transactionsCSV filter (($."payment_txn_id" == ordersItems."txn_id") and ($."payment_txn_success" == "true")) map (var3, indexVar3) -> {
	"transaction_success" : var3.payment_txn_success
	})
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="bob" doc:id="e820a1f4-e85f-4e69-ad40-a7b67d23ce31" variableName="bob" />
		<ee:transform doc:name="Copy_of_Copy_of_only successful txns and previous month" doc:id="d8055595-8efd-4953-a999-8c820e4536c5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pay1 = vars.bob.Data
---
pay1 filter ($.transaction_success == "true" and $.date.month > now().month -2 and $.date.month < now().month)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Copy_of_Logger" doc:id="6cbafd7d-23ff-4bf9-bb77-10ed477a1efa" />
	</flow>
	<flow name="Copy_of_referenceFlowWhenCombiningCSVsAndAPIs" doc:id="d8035e29-f375-4247-868b-6a71ddc104b5" >
		<flow-ref doc:name="ordersCSVFlowRef" doc:id="417f9478-c84c-4eb8-9720-e34b75c5dec1" name="ordersCSVFlow" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="725ae1b0-2956-446d-97f1-f54fca4fe4ce" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//transform into standard format as usually using
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as payload" doc:id="b0d555f9-d50e-46f6-8ea4-4f65b8b156ec" variableName="var1" />
		<http:request method="GET" doc:name="Copy_of_requestPayloadFromOrdersCSV" doc:id="1c1751dd-7847-46eb-80a8-84420e4a2b0d" config-ref="HTTP_Request_configuration" path="/dummypath" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="c6bcaa4c-b0c8-4264-b16d-03b27bb3b519" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//transform payload as payload usually used
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as API payload" doc:id="f4bb81ba-9b9e-427e-b06e-4fd658cb2cab" variableName="var2" />
		<ee:transform doc:name="Copy_of_Transform Message" doc:id="b402e326-23d3-4f7f-be9c-3595e745a56c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
//flatten (var1..var2)
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="" doc:name="Copy_of_set variable as ordersCSV and ordersAPI" doc:id="12bcfbb7-41aa-4e20-b507-d61c3abb1d9f" variableName="var3" />
	</flow>
	<flow name="test3" doc:id="73e9aa9b-8603-4aec-9c6e-15a77b6a6e82" >
		<http:listener doc:name="Listener" doc:id="e963224a-8a29-4219-b46d-a182eb75e397" path="/test3" config-ref="HTTP_Listener_config"/>
		<flow-ref doc:name="Flow Reference" doc:id="b3bebc01-b0c2-4ee6-9975-89c5443bee6c" name="ordersCSVFlow"/>
		<ee:transform doc:name="Transform Message" doc:id="6d379c7b-9bae-4ee2-8cb2-44289b576036" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> {
	order_id: item.order_id,
	qty: item.qty
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="var1" doc:id="9795bff8-22ff-4170-bb01-cd24eb5b011e" variableName="var1"/>
		<http:request method="GET" doc:name="Request" doc:id="d910bab5-2a45-46fb-9a0e-9a762a5e18fd" config-ref="HTTP_Request_configuration" path="/order"/>
		<ee:transform doc:name="Transform Message" doc:id="1a838e07-c3d4-401f-b3f7-1db19d4f5bb5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload + vars.var1]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	
	
	
	
</mule>
