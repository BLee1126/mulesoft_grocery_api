<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<file:config name="File_Config1" doc:name="File Config" doc:id="9005c2cb-93d6-4141-ac80-3cfc17003035" >
	</file:config>
	<flow name="getCSVDataFlow" doc:id="536b355d-86d0-45ab-84f1-7d3ce5dd3eed" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="09052532-d6d9-4cea-b66c-ccf9cd56ba00" >
			<route >
				<file:read doc:name="Read Orders CSV" doc:id="a1a37083-5c4f-442c-a093-e98ff9e77549" path='${file.orders}' config-ref="File_Config"/>
				<ee:transform doc:name="Transform Message" doc:id="3265e704-f069-40de-a6db-7e1c23fbc0be" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="b7291438-d797-43a1-a098-40639d305b05" variableName="OrderJSON"/>
			</route>
			<route >
				<file:read doc:name="Read Products CSV" doc:id="a5d3cc75-5298-43ce-b486-bf565b4d0530" config-ref="File_Config" path="${file.products}" />
				<ee:transform doc:name="Transform Message" doc:id="7714d06b-9f0e-4f9a-a389-9781af9b9981" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="c97cc7d4-ec1f-498e-aaa5-a2b5b59eb11b" variableName="ProductJSON"/>
			</route>
			<route >
				<file:read doc:name="Read Transactions CSV" doc:id="67f5686a-fda5-462d-ae91-ec2ebbcaf29e" config-ref="File_Config" path="${file.transactions}" />
				<ee:transform doc:name="Transform Message" doc:id="58705b2c-a5c8-4702-b8bd-d428cce61cb2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="bb16bb4a-5b0b-4ed1-b3d8-286d2cf67d63" variableName="TransactionJSON"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="6787ee43-23da-417c-a689-64bd6a828d64" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var firstInput = vars.OrderJSON
var secondInput = vars.ProductJSON
var thirdInput = vars.TransactionJSON
---
firstInput map (firstInputValue) ->
{
  	store_id : firstInputValue.store_id as Number,
  	datetime: firstInputValue.datetime,
  	(secondInput filter ($.*product_id contains firstInputValue.product_id) map (secondInputValue) -> {
      price : (secondInputValue.price as String replace /[$]/ with("")) as Number
    }),
    qty : firstInputValue.qty as Number,
    product_id : firstInputValue.product_id,
    (secondInput filter ($.*product_id contains firstInputValue.product_id) map (secondInputValue) -> {
      total_sales_of_day : (firstInputValue.qty * (secondInputValue.price as String replace /[$]/ with("")) as Number) 
    }),
    (thirdInput filter ($.*payment_txn_id contains firstInputValue.txn_id) map (thirdInputValue) -> {
      payment_txn_success : thirdInputValue.payment_txn_success as Boolean
    })
} 
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="064a3252-90a7-4f2e-90d8-a9841dc18ff4" />
	</flow>
	<flow name="getECommerceDataFlow" doc:id="235fbbbc-b2b6-4e20-951c-092d4aaad35a">
		<scatter-gather doc:name="Scatter-Gather" doc:id="98470221-9e7b-40ec-a1b9-dfdadc97c969" >
			<route >
				<http:request method="GET" doc:name="RequestOrders" doc:id="ff5e0905-3be8-4f5e-a4c8-8c96f475ac6a" path="/order" config-ref="HTTP_Request_configuration" />
				<ee:transform doc:name="Transform Message" doc:id="6b35e9fb-832d-4af8-b2fc-8b1fe19e9d82" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="35f82601-1c08-4761-b10c-e499670aaaca" variableName="OrderJSON" />
			</route>
			<route >
				<http:request method="GET" doc:name="RequestProducts" doc:id="fc7c5448-7403-4455-b118-2d40642be3d1" config-ref="HTTP_Request_configuration" path="/product" />
				<ee:transform doc:name="Transform Message" doc:id="c11b6668-cadf-48a2-b175-4f4daa88e500" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="ce378fa6-4aa4-44a1-9ae6-dd5933ba770e" variableName="ProductJSON" />
			</route>
			<route >
				<http:request method="GET" doc:name="Copy_of_Request" doc:id="4ce9f97d-4196-4ec8-8b3f-edbafba58e3c" config-ref="HTTP_Request_configuration" path="/transaction" />
				<ee:transform doc:name="Transform Message" doc:id="12bea379-2083-4e74-8014-c0e4df772441" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="a94f7fc0-879c-4e47-b730-44073ea463fc" variableName="TransactionJSON" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="9af36297-c21c-4086-87e3-ebb7a5170998">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var firstInput = vars.OrderJSON
var secondInput = vars.ProductJSON
var thirdInput = vars.TransactionJSON
---
firstInput map (firstInputValue) ->
{
  	store_id : firstInputValue.store_id as Number,
  	datetime: firstInputValue.datetime,
  	(secondInput filter ($.*product_id contains firstInputValue.product_id) map (secondInputValue) -> {
      price : (secondInputValue.price as String replace /[$]/ with("")) as Number
    }),
    qty : firstInputValue.qty as Number,
    product_id : firstInputValue.product_id,
    (secondInput filter ($.*product_id contains firstInputValue.product_id) map (secondInputValue) -> {
      total_sales_of_day : (firstInputValue.qty * (secondInputValue.price as String replace /[$]/ with("")) as Number) 
    }),
    (thirdInput filter ($.*payment_txn_id contains firstInputValue.txn_id) map (thirdInputValue) -> {
      payment_txn_success : thirdInputValue.payment_txn_success as Boolean
    })
} 

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="0a80a558-ab70-4e13-b825-f13c942b339f" />
	</flow>
	<flow name="historicSalesByStoreFlow" doc:id="bfaf32fa-8c08-4f84-8c80-bbe3f4dc3a7a" >
		<set-variable value="#[message.attributes.queryParams.id]" doc:name="Set Variable" doc:id="be9bfa08-7767-473b-aaf0-acdd763d0ade" variableName="store_id" />
		<scatter-gather doc:name="Scatter-Gather" doc:id="8e1c4368-411c-433d-84c9-545bf5cc8934" >
			<route >
				<db:select doc:name="Select * from RDB" doc:id="3a622462-909a-4415-802e-62033137b5e7" config-ref="Database_Config">
			<db:sql><![CDATA[select orders.store_id, orders.datetime, orders.qty, product.product_id, product.price, transactions.payment_txn_success, round(product.price::numeric * orders.qty, 2) as total_sales_of_day
from orders
join product on orders.product_id = product.product_id
join transactions on orders.txn_id = transactions.payment_txn_id
where (transactions.payment_txn_success = true);]]></db:sql>
			<db:input-parameters><![CDATA[#[{'store_id':vars.store_id}]]]></db:input-parameters>
		</db:select>
				<ee:transform doc:name="Transform to JSON" doc:id="5fcbcf38-7991-410d-b724-320f02e0b940">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json	
---
payload ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="896da478-c609-4abc-b71b-6e6e3ceee5c1" />
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="cdfb3b1f-650e-4627-9847-07e9c62e3a71" name="getCSVDataFlow"/>
				<ee:transform doc:name="Transform to JSON" doc:id="467cdadc-27fe-4426-9860-1e9669bf1f00" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="9589a4b9-6d60-41ca-a25e-7d06d93bc11f" />
			</route>
			<route >
				<try doc:name="Try" doc:id="d7d09104-addd-4c3d-ac75-b832c3231fd5" >
					<flow-ref doc:name="Flow Reference" doc:id="b3d87127-f414-4bc9-b9d6-0ccdd05ca01c" name="getECommerceDataFlow" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1272bf9d-b97f-4224-a131-57ceebd0a659" type="ANY">
							<set-payload value="#[[]]" doc:name="Set Payload" doc:id="5dda96d1-f865-474a-8e40-c224b4f5bfac" />
						</on-error-continue>
					</error-handler>
				</try>
				<ee:transform doc:name="Transform to JSON" doc:id="1fc559a5-d5ce-4100-817a-fa2e38a85afd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="52e66276-70c6-4320-a5d0-81245d8b0982" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="84882c28-b29a-4e03-a839-ee781970369f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
flatten(payload..payload)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="f596b9d2-fa98-41ff-b1e6-6c7fee4a9fea" />
		<ee:transform doc:name="Transform Message" doc:id="54353e00-89d1-4035-a12d-fb58d665b6ca" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var dateYear = now().year ++ "-0" ++ now().month
---
payload orderBy($.datetime) 
filter($.store_id==(vars.store_id as Number)) 
and ($.payment_txn_success == true)
and ($.datetime < dateYear)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8f1d9b82-ae96-4693-8443-a436d2cfbb26" message="salesByStoreSuccessfullyInvoked" />
		<error-handler >
            <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e2e2a397-f304-4c6c-8b9a-fc6b52370c0f" type="DB:QUERY_EXECUTION">
                <set-payload value="#['Please enter a valid store filter in the URL (For example, &quot;?storeID=1&quot;)']" doc:name="Set Payload" doc:id="12a5fb06-5ac4-405b-baca-33680bb4fa8d" />
            </on-error-continue>
            <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="4cb9248f-6491-476f-af77-265ea776ef0a" type="MULE:EXPRESSION">
                <set-payload value="#['Please enter a valid URL (For example, &quot;/historicIncomeByStore?storeID=1&quot;)']" doc:name="Set Payload" doc:id="2c0ace62-46f5-4fe1-9532-e0a352d66fe5" />
            </on-error-continue>
        </error-handler>
		
	</flow>
	<flow name="historicSalesByProductFlow" doc:id="4af4e5b3-d173-425a-87b7-4f9cb3e187de">
		<set-variable value="#[message.attributes.queryParams.id]" doc:name="Set Variable" doc:id="d1242468-9ce9-4aab-8e32-0dd1625ff21a" variableName="product_id" />
		<scatter-gather doc:name="Scatter-Gather" doc:id="22604228-2415-469c-9c9d-27addc82b265">
			<route>
				<db:select doc:name="Select * from RDB" doc:id="ebbe9e74-f944-4abe-80f9-f639d49606c5" config-ref="Database_Config">
					<db:sql><![CDATA[select orders.store_id, orders.datetime, orders.qty, product.product_id, product.price, transactions.payment_txn_success, round(product.price::numeric * orders.qty, 2) as total_sales_of_day
from orders
join product on orders.product_id = product.product_id
join transactions on orders.txn_id = transactions.payment_txn_id
where (transactions.payment_txn_success = true);]]></db:sql>
					<db:input-parameters><![CDATA[#[{'store_id':vars.store_id}]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform to JSON" doc:id="4dcb0f2e-a4b7-4ab4-a8ce-0eb79e518062">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json	
---
payload ]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="47b7c37f-d2a3-471d-99f6-cdbef814cc00" />
			</route>
			<route>
				<flow-ref doc:name="Flow Reference" doc:id="0cf36579-04db-4178-9370-47879ecbe777" name="getCSVDataFlow" />
				<ee:transform doc:name="Transform to JSON" doc:id="a04ed5ba-b635-42d1-9849-378ead9a6823">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="194ea825-6dd7-4023-929d-d42ebe2b51a5" />
			</route>
			<route>
				<try doc:name="Try" doc:id="cdadc299-6f64-4b52-878b-2ce1d8efc946">
			<flow-ref doc:name="Flow Reference" doc:id="5307cd8b-7477-4ffc-ba34-fe7d253f647c" name="getECommerceDataFlow" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="dbe6b680-4713-4ca6-a0ba-4ec26be5dd3c" type="ANY">
					<set-payload value="#[[]]" doc:name="Set Payload" doc:id="a4a4e4a2-7227-4352-837e-b1f2e35fd561" />
				</on-error-continue>
			</error-handler>
		</try>
				<ee:transform doc:name="Transform to JSON" doc:id="e108a607-21a2-448b-bc61-efe8bd2087bd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="1377e517-ff6d-4059-9cc7-8cefccfb2781" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="43578023-d679-4ad9-a126-95943fba653f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="a82c98cc-f4f4-4c36-bbdc-3d10450241dc" />
		<ee:transform doc:name="Transform Message" doc:id="133cfc79-3b4c-4eda-a81b-df5453d5d632">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var dateYear = now().year ++ "-0" ++ now().month
---
payload orderBy($.datetime) 
filter($.product_id==(vars.product_id as String)) 
and ($.payment_txn_success == true)
and ($.datetime < dateYear)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="90f995e5-373d-4724-90f7-a34d94f4b305" message="salesByStoreSuccessfullyInvoked" />
		<error-handler>
			<on-error-continue enableNotifications="true" logException="true" doc:name="Copy_of_On Error Continue" doc:id="813b7971-343a-4775-a2bf-414a760f6d4e" type="DB:QUERY_EXECUTION">
				<set-payload value="#['Please enter a valid store filter in the URL (For example, &quot;?id=2e784144-aad6-49ba-ad86-c6d39ebac593&quot;)']" doc:name="Copy_of_Set Payload" doc:id="3d819183-000a-421b-b3ec-02a5ae3fe8a8" />
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="Copy_of_On Error Continue" doc:id="e1f95372-13d6-496f-859b-43457e986bf4" type="MULE:EXPRESSION">
				<set-payload value="#['Please enter a valid URL (For example, &quot;/historicSalesByProduct?id=2e784144-aad6-49ba-ad86-c6d39ebac593&quot;)']" doc:name="Copy_of_Set Payload" doc:id="f1caab22-617c-4a54-836e-90500f6a63a9" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="historicIncomeByStoreFlow" doc:id="d6dc4184-e020-446e-b728-722eaaab6bf8" >
		<set-variable value="#[message.attributes.queryParams.id]" doc:name="Set Variable" doc:id="9963c151-9c9f-45fd-a80f-7ec60df3e8bc" variableName="store_id" />
		<scatter-gather doc:name="Scatter-Gather" doc:id="bafd240a-1fcf-4268-8486-faab8c5401b1" >
			<route >
				<db:select doc:name="Select * from RDB" doc:id="c710d747-e3d3-4760-a607-2773c5763553" config-ref="Database_Config" >
					<db:sql ><![CDATA[select orders.store_id, orders.datetime, orders.qty, product.product_id, product.price, transactions.payment_txn_success, round(product.price::numeric * orders.qty, 2) as total_sales_of_day
from orders
join product on orders.product_id = product.product_id
join transactions on orders.txn_id = transactions.payment_txn_id
where (transactions.payment_txn_success = true);]]></db:sql>
					<db:input-parameters ><![CDATA[#[{'store_id':vars.store_id}]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform to JSON" doc:id="ff08cb26-d074-42a4-93a5-dbdd0b37fcbc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json	
---
payload ]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="117d1986-fac6-4201-b5ff-3782130ec991" variableName="RDBObject" />
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="2a9f3045-97d1-48a4-b20d-7cf4af591e2a" name="getCSVDataFlow" />
				<ee:transform doc:name="Transform to JSON" doc:id="79326fb4-b788-4255-8fb9-abdc931ab2b2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="0ea7de2f-45a9-499c-b05d-7f7820263fe4" variableName="CSVObject" />
			</route>
			<route >
				<try doc:name="Try" doc:id="3063c696-66a3-44fa-b922-0d002c55f5a6">
			<flow-ref doc:name="Flow Reference" doc:id="35883031-a1dd-4107-8da3-d0b81b2c8c47" name="getECommerceDataFlow" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="5db6fc01-4d74-45a3-ad14-b684fd156a1b" type="ANY">
					<set-payload value="#[[]]" doc:name="Set Payload" doc:id="139f5b88-2552-4234-b300-c7d47bf04947" />
				</on-error-continue>
			</error-handler>
		</try>
				<ee:transform doc:name="Transform to JSON" doc:id="c7bd9937-227a-45cf-8bbb-16e0a3e4e21d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Variable" doc:id="434bb216-3b20-49b7-9967-cf2247ba604c" variableName="ECommerceObject" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="2f3c89d1-86f7-4ee2-9191-aca8f9f642aa" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var array = vars.CSVObject ++ vars.RDBObject ++ vars.ECommerceObject
---
array map (value) -> {
	store_id : value.store_id,
  	datetime: value.datetime as Date,
    price : value.price,
    qty : value.qty,
    product_id : value.product_id,
    total_sales_of_day : value.total_sales_of_day, 
    payment_txn_success : value.payment_txn_success
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="d12de09c-51fd-47a7-8b92-829e80813c42" />
		<ee:transform doc:name="Transform Message" doc:id="4b243a52-a209-4efb-a1c4-04db1bed530d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload orderBy($.datetime) 
filter($.store_id==(vars.store_id as Number)) 
and ($.payment_txn_success == true)
groupBy($.datetime) pluck $]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="b90a123e-c99c-4836-9583-6dc6b94f03c5" />
		<ee:transform doc:name="Transform Message" doc:id="86fd8981-6bfd-4150-9feb-ec82c8a277ac" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map (value, index) -> {
	store_id : value.store_id[0],
	datetime : value.datetime[0],
	total : sum(value.total_sales_of_day)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cd2c126b-17df-4490-a412-4cecfed72a0c" message="salesByStoreSuccessfullyInvoked" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="Copy_of_On Error Continue" doc:id="e2d43293-0155-4db5-b4e8-136de649f11c" type="DB:QUERY_EXECUTION" >
				<set-payload value="#['Please enter a valid store filter in the URL (For example, &quot;?storeID=1&quot;)']" doc:name="Copy_of_Set Payload" doc:id="9797ae7e-af07-4881-bb39-a3ae022132f9" />
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="Copy_of_On Error Continue" doc:id="245864e6-1fe5-4fd0-b39c-ecb8763c2155" type="MULE:EXPRESSION" >
				<set-payload value="#['Please enter a valid URL (For example, &quot;/historicIncomeByStore?storeID=1&quot;)']" doc:name="Copy_of_Set Payload" doc:id="3f7a1e5a-6a0a-45b6-87d4-8872852a3778" />
			</on-error-continue>
		</error-handler>
	</flow>
</mule>